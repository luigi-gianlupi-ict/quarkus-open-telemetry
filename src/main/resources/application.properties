
#OPENTELEMETRY
quarkus.opentelemetry.enabled=true
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
#quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://host.docker.internal:4317
quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my_secret
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n


#KAFKA
quarkus.kafka.devservices.enabled=false
#kafka.bootstrap.servers=localhost:29092
kafka.bootstrap.servers=192.168.1.56:29092


mp.messaging.outgoing.event-out.connector=smallrye-kafka
mp.messaging.outgoing.event-out.topic=custom
mp.messaging.outgoing.event-out.value.serializer=it.ictgroup.model.util.CustomObjectSerializer
#mp.messaging.outgoing.event-out.value.serializer=io.vertx.kafka.client.serialization.JsonObjectSerializer

#mp.messaging.outgoing.event-out.partition=1

mp.messaging.incoming.event-in.topic=custom
mp.messaging.incoming.event-in.connector=smallrye-kafka
mp.messaging.incoming.event-in.value.deserializer=it.ictgroup.model.util.CustomObjectDeserializer
#mp.messaging.incoming.event-in.value.serializer=io.vertx.kafka.client.serialization.JsonObjectDeserializer

mp.messaging.incoming.event-in.group.id=quarkus-open-telemetry-intellij
#mp.messaging.incoming.event-in.group.id=quarkus-open-telemetry-docker

#mp.messaging.outgoing.event.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.event.value.serializer=io.vertx.kafka.client.serialization.JsonObjectSerializer

#ELASTIC
quarkus.elasticsearch.devservices.enabled=false
asset.es.address=asset-split-elastic.n-ess.it:443
asset.es.user=elasticsearch
asset.es.pwd=elasticsearch
asset.es.schema=https
asset.es.conn.timeout=60000
asset.es.socket.timeout=60000

#asset.es.address=localhost:9208
#asset.es.user=elasticsearch
#asset.es.pwd=elasticsearch
#asset.es.schema=http
#asset.es.conn.timeout=60000
#asset.es.socket.timeout=60000

#asset.es.address=elastic-dev-cps.es.francecentral.azure.elastic-cloud.com:443
#asset.es.user=elasticsearch
#asset.es.pwd=3aixj1FLE1NNkgaBxZawfvHC
#asset.es.schema=https
#asset.es.conn.timeout=60000
#asset.es.socket.timeout=60000

#INDEX
asset.default.index=six_anagraphic_asset

#NATIVE
quarkus.native.additional-build-args=--initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl,-H:ReflectionConfigurationFiles=reflection-config.json
#quarkus.native.additional-build-args=--initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl
quarkus.native.auto-service-loader-registration=true

# DATASOURCE
quarkus.datasource.devservices.enabled=false
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres?currentSchema=asset
#quarkus.datasource.jdbc.url = jdbc:postgresql://host.docker.internal:5432/postgres?currentSchema=asset
quarkus.hibernate-orm.validate-in-dev-mode=false


#MATRIX
emma.datasetclient.url=localhost
emma.datasetclient.port=8080

#SERVER PORT
quarkus.http.port=8888

